openapi: 3.0.2
info:
  title: ecm_api
  version: 1.0.0
  description: ECM API for users
servers:
  - url: 'http://localhost:8080/ecm-api/v1/'
paths:
  /create_folder:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitizenMetadata'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderCreationSuccessResponse'
          description: Successfully created new folder
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '400'
                message: Some of the parameters are missing or not valid.
          description: Some of the parameters are missing or not valid.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '404'
                message: The parent folder could not be found, or the authenticated user does not have access to the parent folder.
          description: The parent folder could not be found, or the authenticated user does not have access to the parent folder.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '409'
                message: The folder is locked or the folder already exists.
          description: The folder is locked or the folder already exists.
  /download_file:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileDownloadRequest'
        required: true
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: A binary file
        '202':
          headers:
            Retry-After:
              schema:
                type: integer
              description: Time in seconds after which the file will be available for the client to download.
          content:
            application/json:
              schema:
                type: string
              example: File is not ready to be downloaded.
          description: File is not ready to be downloaded.
        '404':
          content:
            application/json:
              schema:
                type: string
              example:
                code: '404'
                message: File not found
          description: File not found
      description: Get file
  /upload_file:
    post:
      requestBody:
        description: "This order of parameters is required.

      1. First parameter is a string that encodes this JSON object:
      
      
        {  \"boxFolderId\": \"string\", 
          \"appUserId\": \"string\"  }
   
   2. Second parameter is a file attachment
        
        
        See #/components/schemas/FileUploadData for details of request fields."
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadData'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFileResponse'
          description: Document ID of uploaded content is returned
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              examples:
                'Folder error':
                  value:
                    code: '400'
                    message: Folder error
                'Some of the parameters are missing or not valid':
                  value:
                    code: '400'
                    message: Some of the parameters are missing or not valid
          description: Folder error / Some of the parameters are missing or not valid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '403'
                message: User does not have the required access to perform the action
          description: User does not have the required access to perform the action
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '404'
                message: App User or Folder error
          description: App User or Folder error
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '409'
                message: File exists error
          description: File exists error
  /upload_largefile:
    post:
      requestBody:
        description: "This order of parameters is required.

      1. First parameter is a string that encodes this JSON object:


        {  \"boxFolderId\": \"string\",
          \"appUserId\": \"string\",
            \"fileSize\": \"integer\" }

   2. Second parameter is a file attachment


        See #/components/schemas/FileUploadData for details of request fields."
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadData'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadLargefileResponse'
          description: Document ID of uploaded content is returned
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              examples:
                'Folder error':
                  value:
                    code: '400'
                    message: Folder error
                'Some of the parameters are missing or not valid':
                  value:
                    code: '400'
                    message: Some of the parameters are missing or not valid
          description: Folder error / Some of the parameters are missing or not valid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '403'
                message: User does not have the required access to perform the action
          description: User does not have the required access to perform the action
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '404'
                message: App User or Folder error
          description: App User or Folder error
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '409'
                message: File exists error
          description: File exists error
  /search:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
          description: File or Folder obtained
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '400'
                message: Some of the parameters are missing or not valid.
          description: Some of the parameters are missing or not valid.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '404'
                message: App User or File not found.
          description: App User or File not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '500'
                message: Service error
          description: Service error
      description: Get file
  /apply_metadata:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataAdditionRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataAdditionResponse'
          description: Metadata successfully applied to the Document
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '400'
                message: DocumentID information missing or not valid
          description: DocumentID information missing or not valid
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '404'
                message: App User or File not found
          description: App User or File not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '500'
                message: Metadata not applied due to error
          description: Metadata not applied due to error
      description: apply metadata to document
  /update_metadata:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataUpdationRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataUpdationResponse'
          description: Metadata successfully appended to the Document
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataUpdation207Response'
              example:
                {
                  "SUCCESS: ": ["ProgramID successfully appended to Child Care Template", "Application Number successfully appended to FA/SNAP Template"],
                  "PRE-CONDITION_FAILED: ": ["Application Number has no existing value in Child Care Template", "Case Number has no existing value in FA/SNAP Template"]
                }
          description: Multi Status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '400'
                message: DocumentID information missing or not valid
          description: DocumentID information missing or not valid
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '404'
                message: App User or File not found
          description: App User or File not found
        '412':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataUpdation412Response'
              example:
                {
                  "PRE-CONDITION_FAILED: ": ["Child Care Metadata Template not applied to the document", "FA/SNAP Metadata Template not applied to the document"]
                }
          description: All the input parameters failed to append the metadata to the document
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '500'
                message: Metadata not appended due to error
          description: Metadata not appended due to error
      description: update metadata of document
  /delete_document:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentDeletionRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDeletionResult'
          description: File deleted successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '400'
                message: Some of the parameters are missing or not valid.
          description: Some of the parameters are missing or not valid.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '404'
                message: App User or File not found
          description: App User or File not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '500'
                message: You cannot delete this file as it is already attached to a Case or is Verified.
          description: You cannot delete this file as it is already attached to a Case or is Verified.
  /view_document:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentViewRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentViewResponse'
          description: view metadata
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '400'
                message: Some of the parameters are missing or not valid.
          description: Some of the parameters are missing or not valid
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '404'
                message: File not found
          description: File not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '500'
                message: document view error
          description: document view error
  /move_document:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentMoveRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentMoveResponse'
              example:
                message: Move process has been Successful
          description: Move process has been Successful
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              examples:
                "Folder error":
                  value:
                    code: '400'
                    message: Folder error
                "Some of the parameters are missing or not valid":
                  value:
                    code: '400'
                    message: Some of the parameters are missing or not valid
          description: Folder error / Some of the parameters are missing or not valid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '403'
                message: User does not have the required access to perform the action
          description: User does not have the required access to perform the action
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
              example:
                code: '404'
                message: App User or Folder error
          description: App User or Folder error
components:
  schemas:
    FolderCreationSuccessResponse:
      type: object
      properties:
        appUserId:
          description: The unique identifier for the user the folder is associated with.
          type: string
        folderId:
          description: The unique identifier that represents the folder.
          type: string
    UploadFileResponse:
      type: object
      properties:
        Status:
          description: Status message for operation
          type: string
        FileId:
          description: File ID of uploaded content
          type: string
    UploadLargefileResponse:
      type: object
      properties:
        Status:
          description: Status message for operation
          type: string
        FileId:
          description: File ID of uploaded content
          type: string
    ServiceError:
      type: object
      properties:
        code:
          description: Error code
          type: string
        message:
          description: Error description
          type: string
    CitizenMetadata:
      required:
        - logon_user_id
        - firstName
        - lastName
      description: "One of mpi_id or sys_id is required. mpi_id will be sent only when the account is a verified account. sys_id will be sent only when the account is an unverified account."
      type: object
      properties:
        logon_user_id:
          type: string
        mpi_id:
          type: string
        sys_id:
          type: string
        firstName:
          description: First name
          type: string
        lastName:
          description: Last name
          type: string
        dob:
          format: date
          description: Date of birth
          type: string
        ssn4:
          description: Last 4 digits of SSN
          pattern: '\d{4}'
          type: string
    FileDownloadRequest:
      required:
        - appUserId
        - fileId
      type: object
      properties:
        appUserId:
          type: string
        fileId:
          type: string
    FileUploadData:
      description: "This order of parameters is required.

      1. First parameter is a string that encodes this JSON object:
      
      
        {  \"boxFolderId\": \"string\", 
          \"appUserId\": \"string\"  }
   
   2. Second parameter is a file attachment
"
      required:
        - parameters
        - file
      type: object
      properties:
        parameters:
          required:
            - appUserId
            - boxFolderId
          type: object
          properties:
            appUserId:
              type: string
            boxFolderId:
              type: string
        file:
          format: binary
          type: string
    SearchRequest:
      required:
        - appUserId
        - folderId
      type: object
      properties:
        appUserId:
          type: string
        fileName:
          type: string
        folderId:
          type: string
        offset:
          default: 0
          type: integer
        limit:
          default: 20
          type: integer
    FileInfo:
      type: object
      properties:
        fileId:
          type: string
        fileName:
          type: string
        itemType:
          enum:
            - file
            - folder
          type: string
        citizenMetadata:
          $ref: '#/components/schemas/CitizenMetadata'

    SearchResult:
      type: object
      properties:
        complete:
          enum:
            - "true"
            - "false"
          type: string
        fileData:
          type: array
          items:
            $ref: '#/components/schemas/FileInfo'

    DocumentFaSnapCaseMetadata:
      type: object
      properties:
        program_id:
          type: string
        case_number:
          type: string
        application_number:
          type: string
        recipient_id:
          type: string
        document_type:
          type: string
        signed_date:
          type: string
          format: date
        county:
          type: string
        verified:
          enum:
            - 'true'
            - 'false'
          type: string
        verified_by:
          type: string
        verified_date:
          type: string
          format: date
    DocumentFaSnapCaseMetadataWithoutVerified:
      type: object
      properties:
        program_id:
          type: string
        case_number:
          type: string
        application_number:
          type: string
        recipient_id:
          type: string
        document_type:
          type: string
        signed_date:
          type: string
          format: date
        county:
          type: string

    DocumentChildCareCaseMetadata:
      type: object
      properties:
        program_id:
          type: string
        application_number:
          type: string
        document_type:
          type: string
        document_name:
          type: string
        load_date:
          type: string
          format: date
        load_time:
          type: string
        county:
          type: string
        verified:
          enum:
            - 'true'
            - 'false'
          type: string
        verified_by:
          type: string
        verified_date:
          type: string
          format: date
    DocumentChildCareCaseMetadataWithoutVerified:
      type: object
      properties:
        program_id:
          type: string
        application_number:
          type: string
        document_type:
          type: string
        document_name:
          type: string
        load_date:
          type: string
          format: date
        load_time:
          type: string
        county:
          type: string

    DocumentConfidentialityMetadata:
      type: object
      properties:
        confidential:
          enum:
            - 'true'
            - 'false'
          type: string
    MetadataAdditionRequest:
      required:
        - appUserId
        - documentID
      type: object
      properties:
        appUserId:
          type: string
        documentID:
          type: string
        documentConfidentialityMetadata:
          $ref: '#/components/schemas/DocumentConfidentialityMetadata'
        caseFaSnapMetadata:
          $ref: '#/components/schemas/DocumentFaSnapCaseMetadata'
        caseChildCareMetadata:
          $ref: '#/components/schemas/DocumentChildCareCaseMetadata'
    MetadataAdditionResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    MetadataUpdationRequest:
      required:
        - appUserId
        - documentID
      type: object
      properties:
        appUserId:
          type: string
        documentID:
          type: string
        caseFaSnapMetadata:
          $ref: '#/components/schemas/DocumentFaSnapCaseMetadataWithoutVerified'
        caseChildCareMetadata:
          $ref: '#/components/schemas/DocumentChildCareCaseMetadataWithoutVerified'
    MetadataUpdationResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    MetadataUpdation207Response:
      type: object
      properties:
        'SUCCESS: ':
          type: array
          items:
            type: string
        'PRE-CONDITION_FAILED: ':
          type: array
          items:
            type: string
    MetadataUpdation412Response:
      type: object
      properties:
        'PRE-CONDITION_FAILED: ':
          type: array
          items:
            type: string
    DocumentDeletionRequest:
      required:
        - appUserId
        - documentId
      type: object
      properties:
        appUserId:
          type: string
        documentId:
          type: string
        verified:
          default: false
          type: boolean
    DocumentDeletionResult:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    DocumentViewRequest:
      required:
        - appUserId
        - fileId
      type: object
      properties:
        appUserId:
          type: string
        fileId:
          type: string
    DocumentViewResponse:
      type: object
      properties:
        previewUrl:
          type: string
    DocumentMoveRequest:
      required:
        - oldBoxFolderId
        - oldAppUserId
        - newBoxFolderId
        - newAppUserId
      type: object
      properties:
        oldBoxFolderId:
          type: string
          required: true
        oldAppUserId:
          type: string
          required: true
        newBoxFolderId:
          type: string
          required: true
        newAppUserId:
          type: string
          required: true
    DocumentMoveResponse:
      type: object
      properties:
        message:
          type: string
